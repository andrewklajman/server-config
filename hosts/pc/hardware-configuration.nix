# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "nvme" "xhci_pci" "ahci" "usbhid" "usb_storage" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "tmpfs";
      fsType = "tmpfs";
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/CAE6-D474";
      fsType = "vfat";
      options = [ "fmask=0077" "dmask=0077" ];
    };

  fileSystems."/nix" =
    { device = "/dev/disk/by-uuid/3f30eb69-32ac-4fbe-b32e-7ea93170f583";
      fsType = "ext4";
    };

  fileSystems."/mnt/localPersist" =
    { device = "/dev/disk/by-uuid/75859c55-d8df-4c97-a74f-859f49e3f85a";
      fsType = "ext4";
      neededForBoot = true;
    };

#  fileSystems."/persist-enc" =
#    { device = "/dev/disk/by-uuid/83ea2481-f20e-4e11-8506-fa63c65524f4";
#      fsType = "ext4";
#    };
#
#  boot.initrd.luks.devices."persist-enc".device = "/dev/disk/by-uuid/f61d2a4b-2302-4d2c-8a96-80482a6d7ceb";

  swapDevices =
    [ { device = "/dev/disk/by-uuid/bc3c06ce-960b-476f-83ae-71b89bae7fc3"; }
    ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp42s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlo1.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
